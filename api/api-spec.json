{
  "openapi": "3.0.3",
  "info": {
    "title": "IOT Server API",
    "version": "1.0.0",
    "description": "REST API for querying IoT sensor data.\n- Authentication: Bearer JWT for `/api/v1/**` and User operation except login."
  },
  "servers": [
    {
      "url": "{baseURL}",
      "description": "Configurable base URL",
      "variables": {
        "baseURL": {
          "default": "http://localhost:8080"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Sensor (Admin)",
      "description": "Admin endpoints for creating, updating, deleting sensor records"
    },
    {
      "name": "Sensor (User)",
      "description": "User endpoints for searching sensor records"
    },
    {
      "name": "Users",
      "description": "User login, logout"
    },
    {
      "name": "Users (Admin)",
      "description": "User registration"
    }
  ],
  "paths": {
    "/api/v1/sensor/create": {
      "post": {
        "tags": [
          "Sensor (Admin)"
        ],
        "operationId": "createSensorRecord",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSensorRecordRequest"
              },
              "example": {
                "id1": "SENSOR-6",
                "id2": 6,
                "sensor_type": "temperature",
                "sensor_value": 73.26,
                "timestamp": "2025-08-28T00:42:57.922Z"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorResponse"
                },
                "example": {
                  "data": {
                    "id1": "SENSOR-6",
                    "id2": 6,
                    "sensor_type": "temperature",
                    "sensor_records": [
                      {
                        "sensor_value": 73.26,
                        "timestamp": "2025-08-28T00:42:57.922Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Create Sensor Record"
      }
    },
    "/api/v1/sensor/delete/by-id": {
      "delete": {
        "tags": [
          "Sensor (Admin)"
        ],
        "operationId": "deleteByIdCombination",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id1",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id2",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletedResult"
                },
                "example": {
                  "data": {
                    "deleted": 5
                  }
                }
              }
            }
          }
        },
        "summary": "Delete Records by ID Combination"
      }
    },
    "/api/v1/sensor/delete/by-time-range": {
      "delete": {
        "tags": [
          "Sensor (Admin)"
        ],
        "operationId": "deleteByTimeRange",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletedResult"
                },
                "example": {
                  "data": {
                    "deleted": 5
                  }
                }
              }
            }
          }
        },
        "summary": "Delete Records by Time Range"
      }
    },
    "/api/v1/sensor/delete/by-id-time-range": {
      "delete": {
        "tags": [
          "Sensor (Admin)"
        ],
        "operationId": "deleteByIdAndTimeRange",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id1",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id2",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletedResult"
                },
                "example": {
                  "data": {
                    "deleted": 5
                  }
                }
              }
            }
          }
        },
        "summary": "Delete Records by ID and Time Range"
      }
    },
    "/api/v1/sensor/update/by-id": {
      "patch": {
        "tags": [
          "Sensor (Admin)"
        ],
        "operationId": "updateByIdCombination",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateByIdRequest"
              },
              "example": {
                "id1": "SENSOR-3",
                "id2": 3,
                "sensor_value": 99.99
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatedResult"
                },
                "example": {
                  "data": {
                    "updated": 3
                  }
                }
              }
            }
          }
        },
        "summary": "Update Records by ID Combination"
      }
    },
    "/api/v1/sensor/update/by-time-range": {
      "patch": {
        "tags": [
          "Sensor (Admin)"
        ],
        "operationId": "updateByTimeRange",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateByTimeRangeRequest"
              },
              "example": {
                "start": "2025-08-26T07:55:43.368000Z",
                "end": "2025-08-26T07:59:43.368000Z",
                "sensor_value": 99.99
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatedResult"
                },
                "example": {
                  "data": {
                    "updated": 3
                  }
                }
              }
            }
          }
        },
        "summary": "Update Records by Time Range"
      }
    },
    "/api/v1/sensor/update/by-id-time-range": {
      "patch": {
        "tags": [
          "Sensor (Admin)"
        ],
        "operationId": "updateByIdAndTimeRange",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateByIdTimeRangeRequest"
              },
              "example": {
                "id1": "SENSOR-5",
                "id2": 5,
                "start": "2025-08-26T08:34:09.077000Z",
                "end": "2025-08-26T08:37:09.077000Z",
                "sensor_value": 37.08
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatedResult"
                },
                "example": {
                  "data": {
                    "updated": 3
                  }
                }
              }
            }
          }
        },
        "summary": "Update Records by ID and Time Range"
      }
    },
    "/api/v1/sensor/search/by-id": {
      "get": {
        "tags": [
          "Sensor (User)"
        ],
        "operationId": "searchByIdCombination",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id1",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id2",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorWithPagingResponse"
                }
              }
            }
          }
        },
        "summary": "Search Records by ID Combination"
      }
    },
    "/api/v1/sensor/search/by-time-range": {
      "get": {
        "tags": [
          "Sensor (User)"
        ],
        "operationId": "searchByTimeRange",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorListResponse"
                }
              }
            }
          }
        },
        "summary": "Search Records by Time Range"
      }
    },
    "/api/v1/sensor/search/by-id-time-range": {
      "get": {
        "tags": [
          "Sensor (User)"
        ],
        "operationId": "searchByIdAndTimeRange",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id1",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id2",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorWithPagingResponse"
                }
              }
            }
          }
        },
        "summary": "Search Records by ID and Time Range"
      }
    },
    "/api/users": {
      "post": {
        "tags": [
          "Users (Admin)"
        ],
        "operationId": "registerUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              },
              "example": {
                "id": "user1",
                "password": "user1password",
                "name": "User Test 1",
                "role": "user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                },
                "example": {
                  "data": {
                    "id": "user1",
                    "name": "User Test 1",
                    "role": "user"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Register User"
      }
    },
    "/api/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "loginUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              },
              "example": {
                "id": "admin",
                "password": "adminpassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                },
                "example": {
                  "data": {
                    "id": "admin",
                    "name": "Administrator",
                    "role": "admin",
                    "token": "eyJhbGciOi..."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Login User"
      }
    },
    "/api/users/logout": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "logoutUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                },
                "example": {
                  "message": "Logout success"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Logout User"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "object"
          }
        }
      },
      "PageMetadata": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1
          },
          "size": {
            "type": "integer",
            "minimum": 1
          },
          "total_item": {
            "type": "integer",
            "minimum": 0
          },
          "total_page": {
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "page",
          "size",
          "total_item",
          "total_page"
        ]
      },
      "SensorRecord": {
        "type": "object",
        "properties": {
          "sensor_value": {
            "type": "number"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "sensor_value",
          "timestamp"
        ]
      },
      "Sensor": {
        "type": "object",
        "properties": {
          "id1": {
            "type": "string"
          },
          "id2": {
            "type": "integer"
          },
          "sensor_type": {
            "type": "string"
          },
          "sensor_records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SensorRecord"
            }
          }
        },
        "required": [
          "id1",
          "id2",
          "sensor_type"
        ]
      },
      "CreateSensorRecordRequest": {
        "type": "object",
        "properties": {
          "id1": {
            "type": "string"
          },
          "id2": {
            "type": "integer"
          },
          "sensor_type": {
            "type": "string"
          },
          "sensor_value": {
            "type": "number"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id1",
          "id2",
          "sensor_type",
          "sensor_value",
          "timestamp"
        ]
      },
      "UpdateByIdRequest": {
        "type": "object",
        "properties": {
          "id1": {
            "type": "string"
          },
          "id2": {
            "type": "integer"
          },
          "sensor_value": {
            "type": "number"
          }
        },
        "required": [
          "id1",
          "id2",
          "sensor_value"
        ]
      },
      "UpdateByTimeRangeRequest": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "sensor_value": {
            "type": "number"
          }
        },
        "required": [
          "start",
          "end",
          "sensor_value"
        ]
      },
      "UpdateByIdTimeRangeRequest": {
        "type": "object",
        "properties": {
          "id1": {
            "type": "string"
          },
          "id2": {
            "type": "integer"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "sensor_value": {
            "type": "number"
          }
        },
        "required": [
          "id1",
          "id2",
          "start",
          "end",
          "sensor_value"
        ]
      },
      "DeletedResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "deleted": {
                "type": "integer"
              }
            },
            "required": [
              "deleted"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UpdatedResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "updated": {
                "type": "integer"
              }
            },
            "required": [
              "updated"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SensorResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Sensor"
          }
        },
        "required": [
          "data"
        ]
      },
      "SensorListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sensor"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        },
        "required": [
          "data"
        ]
      },
      "SensorWithPagingResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Sensor"
          },
          "paging": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        },
        "required": [
          "data"
        ]
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "password",
          "name"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "role"
        ]
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "data"
        ]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "password"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "token": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "role",
              "token"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      }
    }
  }
}